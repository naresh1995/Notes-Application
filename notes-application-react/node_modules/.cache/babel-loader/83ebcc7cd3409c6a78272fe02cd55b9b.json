{"ast":null,"code":"import _classCallCheck from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/naresh/Documents/Projects/notes-application/src/Components/NoteBlock.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { Note } from '../Model';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport ReactTooltip from 'react-tooltip';\nvar WAIT_INTERVAL = 1000;\n\nvar NoteBlock =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteBlock, _Component);\n\n  function NoteBlock(props) {\n    var _this;\n\n    _classCallCheck(this, NoteBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteBlock).call(this, props));\n    _this.state = {\n      note: _this.props.note,\n      expanded: false\n    };\n    return _this;\n  }\n\n  _createClass(NoteBlock, [{\n    key: \"titleChange\",\n    value: function titleChange(event) {\n      clearTimeout(this.titleTimer);\n      var prevIndex = this.state.note.id;\n      this.state.note.title = event.target.value;\n      this.setState({\n        note: this.state.note\n      });\n      this.titleTimer = setTimeout(this.triggerTitleChange.bind(this), WAIT_INTERVAL);\n    }\n  }, {\n    key: \"triggerTitleChange\",\n    value: function triggerTitleChange() {\n      Note.updateTitle({\n        data: {\n          id: this.state.note.id,\n          title: this.state.note.title\n        },\n        onSuccess: function (data) {\n          NotificationManager.success(data.message);\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote() {\n      Note.deleteNote({\n        data: {\n          id: this.state.note.id\n        },\n        onSuccess: function (data) {\n          this.props.onDelete(this.state.note.id);\n          NotificationManager.warning(data.message);\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"noteChange\",\n    value: function noteChange(event) {\n      clearTimeout(this.noteTimer);\n      this.state.note.notes = event.target.value;\n      this.setState({\n        note: this.state.note\n      });\n      this.noteTimer = setTimeout(this.triggerNoteChange.bind(this), WAIT_INTERVAL);\n    }\n  }, {\n    key: \"triggerNoteChange\",\n    value: function triggerNoteChange() {\n      Note.updateNote({\n        data: {\n          id: this.state.note.id,\n          notes: this.state.note.notes\n        },\n        onSuccess: function (data) {\n          NotificationManager.success(data.message);\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"toggleExpandNote\",\n    value: function toggleExpandNote() {\n      this.setState({\n        expanded: !this.state.expanded\n      });\n    }\n  }, {\n    key: \"getSingleNoteData\",\n    value: function getSingleNoteData(data) {\n      this.state.note.notes = data.notes;\n      this.setState({\n        note: this.state.note\n      });\n    }\n  }, {\n    key: \"renderSingleVersionBlock\",\n    value: function renderSingleVersionBlock(data, expandIndex) {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm\",\n        onClick: this.getSingleNoteData.bind(this, data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, data.modified_date));\n    }\n  }, {\n    key: \"renderVersionHistory\",\n    value: function renderVersionHistory() {\n      if (!this.state.expanded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n      }\n\n      var versionData = this.state.note.versionData;\n      versionData = versionData ? versionData : [];\n      return React.createElement(\"div\", {\n        className: \"version\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"version-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Version History\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, versionData.map(this.renderSingleVersionBlock.bind(this))));\n    }\n  }, {\n    key: \"showVersions\",\n    value: function showVersions(index) {\n      this.state.note.showVersions = true;\n      Note.getNoteVersions({\n        data: {\n          id: this.state.note.id\n        },\n        onSuccess: function (data) {\n          var versionData = data.data;\n          this.state.note.versionData = versionData;\n          this.setState({\n            note: this.state.note\n          });\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var note = this.state.note;\n      var buttonClass = this.state.expanded ? \"input-button-full-width\" : \"input-button\";\n      var formClass = this.state.expanded ? \"form-group-full-width\" : \"form-group\";\n      var inputClass = this.state.expanded ? \"input-field-full-width\" : \"input-field\";\n      return React.createElement(\"div\", {\n        className: formClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: inputClass,\n        name: \"title\",\n        placeholder: \"Note Title\",\n        value: note.title,\n        onChange: this.titleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm \" + buttonClass,\n        ref: \"expand\",\n        \"data-tip\": \"Delete Note\",\n        \"data-for\": \"delete\",\n        onClick: this.deleteNote.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"\\u274C\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm \" + buttonClass,\n        \"data-tip\": \"Expand Note\",\n        \"data-for\": \"expand\",\n        onClick: this.toggleExpandNote.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\u2197\\uFE0F\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm \" + buttonClass,\n        \"data-tip\": \"Version History\",\n        \"data-for\": \"history\",\n        onClick: this.showVersions.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\uD83D\\uDD52\")), React.createElement(\"div\", {\n        className: \"notebox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        onChange: this.noteChange.bind(this),\n        className: \"form-control text-area\",\n        rows: \"10\",\n        value: note.notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), this.renderVersionHistory()));\n    }\n  }]);\n\n  return NoteBlock;\n}(Component);\n\nexport default NoteBlock;","map":{"version":3,"sources":["/Users/naresh/Documents/Projects/notes-application/src/Components/NoteBlock.js"],"names":["React","Component","PropTypes","Note","NotificationContainer","NotificationManager","ReactTooltip","WAIT_INTERVAL","NoteBlock","props","state","note","expanded","event","clearTimeout","titleTimer","prevIndex","id","title","target","value","setState","setTimeout","triggerTitleChange","bind","updateTitle","data","onSuccess","success","message","onError","deleteNote","onDelete","warning","noteTimer","notes","triggerNoteChange","updateNote","expandIndex","getSingleNoteData","modified_date","versionData","map","renderSingleVersionBlock","index","showVersions","getNoteVersions","buttonClass","formClass","inputClass","titleChange","toggleExpandNote","noteChange","renderVersionHistory"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { Note } from '../Model';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport ReactTooltip from 'react-tooltip'\nconst WAIT_INTERVAL = 1000\n\nclass NoteBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \tnote: this.props.note,\n        \texpanded: false,\n        }\n    }\n\n    titleChange(event) {\n\t    clearTimeout(this.titleTimer)\n\t    let prevIndex = this.state.note.id;\n\t    this.state.note.title = event.target.value;\n\t    this.setState({\n\t      note: this.state.note\n\t    })\n\t    this.titleTimer = setTimeout(this.triggerTitleChange.bind(this), WAIT_INTERVAL)\n\t}\n\n\ttriggerTitleChange() {\n\t\tNote.updateTitle({\n\t\t  data:{\n\t\t    id:this.state.note.id,\n\t\t    title:this.state.note.title\n\t\t  },\n\t\t  onSuccess: function(data) {\n\t\t    NotificationManager.success(data.message);\n\t\t  }.bind(this),\n\t\t  onError: function(data) {\n\n\t\t  }\n\t\t})\n\t}\n\n\tdeleteNote() {\n      Note.deleteNote({\n        data:{\n          id: this.state.note.id\n        },\n        onSuccess: function(data) {\n          this.props.onDelete(this.state.note.id);\n          NotificationManager.warning(data.message);\n        }.bind(this),\n        onError: function(data) {\n\n        }\n      })\n\t}\n\n\tnoteChange(event) {\n\t    clearTimeout(this.noteTimer)\n\t    this.state.note.notes = event.target.value;\n\t    this.setState({\n\t      note: this.state.note\n\t    })\n\t    this.noteTimer = setTimeout(this.triggerNoteChange.bind(this), WAIT_INTERVAL)\n\t}\n\n\ttriggerNoteChange(){\n\t    Note.updateNote({\n\t      data:{\n\t        id:this.state.note.id,\n\t        notes:this.state.note.notes\n\t      },\n\t      onSuccess: function(data) {\n\t         NotificationManager.success(data.message);\n\t      }.bind(this),\n\t      onError: function(data) {\n\n\t      }\n\t    })\n\t}\n\n\ttoggleExpandNote() {\n\t    this.setState({\n\t    \texpanded: !this.state.expanded\n\t    })\n\t} \n\n\tgetSingleNoteData(data){\n\t    this.state.note.notes = data.notes;\n\t    this.setState({\n\t        note: this.state.note,\n\t      })\n\t  }\n\n\n\trenderSingleVersionBlock(data, expandIndex) {\n\t\treturn(\n\t\t  <li><button type=\"button\" className=\"btn btn-sm\" onClick={this.getSingleNoteData.bind(this,data)}>{data.modified_date}</button></li>\n\t\t)\n\t}\n\n  \trenderVersionHistory() {\n  \t\tif (!this.state.expanded) {\n  \t\t\treturn <div />\n  \t\t}\n\n  \t\tlet { versionData } = this.state.note;\n  \t\tversionData = versionData ? versionData : [];\n\t    return (\n\t    \t<div className=\"version\">\n\t          <h4 className=\"version-header\">Version History</h4>\n\t          <ul>{versionData.map(this.renderSingleVersionBlock.bind(this))}</ul>\n\t        </div>\n    \t)\n\t}\n\n\n\tshowVersions(index){\n\t    this.state.note.showVersions = true;\n\t    Note.getNoteVersions({\n\t      data:{\n\t        id:this.state.note.id,\n\t      },\n\t      onSuccess: function(data) {\n\t        let versionData = data.data\n\t        this.state.note.versionData = versionData\n\t        this.setState({\n\t          note: this.state.note,\n\t        })\n\t      }.bind(this),\n\t      onError: function(data) {\n\n\t      }\n\t    })\n\t}\n\n    render() {\n\t\tlet { note } = this.state;\n\t\tvar buttonClass = this.state.expanded ? \"input-button-full-width\" : \"input-button\";\n\t\tvar formClass = this.state.expanded ? \"form-group-full-width\" : \"form-group\";\n\t\tvar inputClass = this.state.expanded ? \"input-field-full-width\" : \"input-field\";\n\n        return(\n\t        <div className={formClass}>\n\t          <div className= \"input-container\">\n\t            <input type=\"text\" className={inputClass} name=\"title\" placeholder=\"Note Title\" value={note.title} onChange={this.titleChange.bind(this)}/>\n\t            <button type=\"button\" className={\"btn btn-sm \" + buttonClass} ref = \"expand\" data-tip='Delete Note' data-for='delete' onClick={this.deleteNote.bind(this)}>❌</button>\n\t            <button type=\"button\" className={\"btn btn-sm \" + buttonClass} data-tip='Expand Note' data-for='expand' onClick={this.toggleExpandNote.bind(this)}>↗️</button>\n\t            <button type=\"button\" className={\"btn btn-sm \" + buttonClass} data-tip='Version History' data-for='history' onClick={this.showVersions.bind(this)}>🕒</button>\n\t          </div>\n\t          <div className=\"notebox\">\n\t          \t<textarea onChange={this.noteChange.bind(this)} className=\"form-control text-area\" rows=\"10\" value={note.notes}/>\n\t          \t{this.renderVersionHistory()}\n\t          </div>\n\t        </div>\n\t      )\n    }\n}\n\nexport default NoteBlock;\n"]},"metadata":{},"sourceType":"module"}