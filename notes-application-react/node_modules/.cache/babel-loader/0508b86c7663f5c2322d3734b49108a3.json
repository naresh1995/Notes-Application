{"ast":null,"code":"import _classCallCheck from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/naresh/Documents/Projects/notes-application/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nvar dummyData = [{\n  title: \"Naresh\",\n  notes: \"i am not good boy\",\n  expand: true\n}, {\n  title: \"Naveen\",\n  notes: \"i am not good boy\",\n  expand: true\n}, {\n  title: \"Dikson\",\n  notes: \"i am not good boy\",\n  expand: false\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      loading: true,\n      noteDataFromServer: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //Data fetch from server\n      // {\n      //   this.setState({\n      //     loading: false,\n      //     noteDataFromServer: dataFromServer\n      //   })\n      // }\n      this.setState({\n        noteDataFromServer: dummyData,\n        loading: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"setTextToState\",\n    value: function setTextToState(text, index) {\n      dummyData[index] = text;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(index, event) {\n      this.state.noteDataFromServer[index].notes = event.target.value;\n      this.setState({\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n    }\n  }, {\n    key: \"renderNotes\",\n    value: function renderNotes(data, index) {\n      if (data.expand) {\n        return (// <div>\n          //   <p>{data.title}</p>\n          //   <input type=\"text\" value={this.state.noteDataFromServer[index].notes} onChange={this.handleChange.bind(this, index)}/>\n          // </div>\n          React.createElement(\"div\", {\n            className: \"form-group1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"input-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"input-field1\",\n            name: \"title\",\n            placeholder: \"Note Title\",\n            value: this.state.noteDataFromServer[index].notes,\n            onChange: this.handleChange.bind(this, index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm input-button1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"\\u274C\")), React.createElement(\"textarea\", {\n            className: \"form-control text-area\",\n            rows: \"15\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }))\n        );\n      } else {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          name: \"title\",\n          placeholder: \"Note Title\",\n          value: this.state.noteDataFromServer[index].notes,\n          onChange: this.handleChange.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"\\u274C\")), React.createElement(\"textarea\", {\n          className: \"form-control text-area\",\n          rows: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          name: \"title\",\n          placeholder: \"Note Title\",\n          value: this.state.noteDataFromServer[index].notes,\n          onChange: this.handleChange.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"\\u274C\")), React.createElement(\"textarea\", {\n          className: \"form-control text-area\",\n          rows: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        })));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"loading....\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"App-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.state.noteDataFromServer.map(this.renderNotes.bind(this))));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);","map":{"version":3,"sources":["/Users/naresh/Documents/Projects/notes-application/src/App.js"],"names":["React","Component","dummyData","title","notes","expand","App","props","state","loading","noteDataFromServer","setState","text","index","event","target","value","data","handleChange","bind","map","renderNotes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst dummyData = [\n  { title: \"Naresh\", notes: \"i am not good boy\", expand: true },\n  { title: \"Naveen\", notes: \"i am not good boy\", expand: true },\n  { title: \"Dikson\", notes: \"i am not good boy\", expand: false },\n]\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      noteDataFromServer: [],\n    };\n  }\n\n  componentWillMount() {\n    //Data fetch from server\n\n    // {\n    //   this.setState({\n    //     loading: false,\n    //     noteDataFromServer: dataFromServer\n    //   })\n    // }\n\n    this.setState({\n      noteDataFromServer: dummyData,\n      loading: false\n    })\n\n  }\n\n  componentDidMount() {\n\n  }\n\n  setTextToState(text, index) {\n    dummyData[index] = text;\n  }\n\n  handleChange(index, event) {\n    this.state.noteDataFromServer[index].notes = event.target.value;\n    this.setState({\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n\n  }\n\n  renderNotes(data, index) {\n    if(data.expand) {\n      return(\n        // <div>\n        //   <p>{data.title}</p>\n        //   <input type=\"text\" value={this.state.noteDataFromServer[index].notes} onChange={this.handleChange.bind(this, index)}/>\n        // </div>\n          <div className=\"form-group1\">\n            <div className= \"input-container\">\n              <input type=\"text\" className=\"input-field1\" name=\"title\" placeholder=\"Note Title\" value={this.state.noteDataFromServer[index].notes} onChange={this.handleChange.bind(this, index)}/>\n              <button type=\"button\" className=\"btn btn-sm input-button1\">❌</button>\n            </div>\n            <textarea className=\"form-control text-area\" rows=\"15\"></textarea>\n          </div>\n      )  \n    }\n    else{\n      return(\n        <div className=\"row\">\n          <div className=\"form-group\">\n            <div className= \"input-container\">\n              <input type=\"text\" className=\"input-field\" name=\"title\" placeholder=\"Note Title\" value={this.state.noteDataFromServer[index].notes} onChange={this.handleChange.bind(this, index)}/>\n              <button type=\"button\" className=\"btn btn-sm input-button\">❌</button>\n            </div>\n            <textarea className=\"form-control text-area\" rows=\"10\"></textarea>\n          </div>\n\n          <div className=\"form-group\">\n            <div className= \"input-container\">\n              <input type=\"text\" className=\"input-field\" name=\"title\" placeholder=\"Note Title\" value={this.state.noteDataFromServer[index].notes} onChange={this.handleChange.bind(this, index)}/>\n              <button type=\"button\" className=\"btn btn-sm input-button\">❌</button>\n            </div>\n            <textarea className=\"form-control text-area\" rows=\"10\"></textarea>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    if(this.state.loading) {\n      return (\n        <div className=\"App\">\n          <p>loading....</p>\n        </div>\n      )\n    } else {\n      return (\n\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {this.state.noteDataFromServer.map(this.renderNotes.bind(this))}\n          </header>\n        </div>\n      );  \n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}