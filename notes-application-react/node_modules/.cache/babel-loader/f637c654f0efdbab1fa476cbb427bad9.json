{"ast":null,"code":"import _classCallCheck from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/naresh/Documents/Projects/notes-application/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Note } from './Model';\nimport ReactTooltip from 'react-tooltip';\nimport { findDOMNode } from 'react-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      loading: true,\n      noteDataFromServer: [],\n      expandIndex: -1\n    };\n    return _this;\n  } //Data fetch from server\n\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      Note.fetchNotes({\n        onSuccess: function (data) {\n          this.setState({\n            noteDataFromServer: data.data,\n            loading: false\n          });\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      ReactTooltip.hide(findDOMNode(this.refs.expand));\n    }\n  }, {\n    key: \"notesChange\",\n    value: function notesChange(index, event) {\n      this.state.noteDataFromServer[index].notes = event.target.value;\n      this.setState({\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n      Note.updateNote({\n        data: {\n          id: this.state.noteDataFromServer[index].id,\n          title: this.state.noteDataFromServer[index].notes\n        },\n        onSuccess: function (data) {// this.setState({\n          //   noteDataFromServer: data.data,\n          //   loading: false\n          // })\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"titleChange\",\n    value: function titleChange(index, event) {\n      var previousIndex = this.state.noteDataFromServer[index].id;\n      this.state.noteDataFromServer[index].title = event.target.value;\n      this.setState({\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n\n      if (previousIndex) {\n        Note.updateTitle({\n          data: {\n            id: this.state.noteDataFromServer[index].id,\n            title: this.state.noteDataFromServer[index].title\n          },\n          onSuccess: function (data) {\n            alert('title saved'); // this.setState({\n            //   noteDataFromServer: data.data,\n            //   loading: false\n            // })\n          }.bind(this),\n          onError: function onError(data) {}\n        });\n      } else {\n        Note.addNewNote({\n          data: {\n            title: this.state.noteDataFromServer[index].title\n          },\n          onSuccess: function (data) {\n            this.setState({\n              noteDataFromServer: data.data,\n              loading: false\n            });\n          }.bind(this),\n          onError: function onError(data) {}\n        });\n      }\n    }\n  }, {\n    key: \"addNewNote\",\n    value: function addNewNote() {\n      var sample = [{\n        title: \"\",\n        notes: \"\",\n        expand: false\n      }];\n      this.setState({\n        noteDataFromServer: sample.concat(this.state.noteDataFromServer)\n      });\n    }\n  }, {\n    key: \"expandNote\",\n    value: function expandNote(index, previousExpandIndex) {\n      this.state.noteDataFromServer[index].expand = true;\n\n      if (previousExpandIndex != -1) {\n        this.state.noteDataFromServer[previousExpandIndex].expand = false;\n      }\n\n      this.setState({\n        expandIndex: index,\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n    }\n  }, {\n    key: \"minimizeNote\",\n    value: function minimizeNote(index) {\n      this.state.noteDataFromServer[index].expand = false;\n      this.setState({\n        expandIndex: -1,\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(index) {\n      var previousIndex = this.state.noteDataFromServer[index].id;\n\n      if (previousIndex) {\n        Note.deleteNote({\n          data: {\n            id: this.state.noteDataFromServer[index].id\n          },\n          onSuccess: function (data) {\n            this.state.noteDataFromServer.splice(index, 1);\n            this.setState({\n              noteDataFromServer: this.state.noteDataFromServer,\n              loading: false\n            });\n          }.bind(this),\n          onError: function onError(data) {}\n        });\n      } else {\n        this.state.noteDataFromServer.splice(index, 1);\n        this.setState({\n          noteDataFromServer: this.state.noteDataFromServer,\n          loading: false\n        });\n      }\n    }\n  }, {\n    key: \"showVersions\",\n    value: function showVersions() {}\n  }, {\n    key: \"saveNote\",\n    value: function saveNote(index) {\n      console.log(this.state.noteDataFromServer[index]);\n    }\n  }, {\n    key: \"renderNotes\",\n    value: function renderNotes(data, index) {\n      if (!data.expand) {\n        var notesData = this.state.noteDataFromServer[index];\n        var notes = this.state.noteDataFromServer[index].notes;\n        return React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          name: \"title\",\n          placeholder: \"Note Title\",\n          value: notesData.title,\n          onChange: this.titleChange.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button\",\n          ref: \"expand\",\n          \"data-tip\": \"Delete Note\",\n          \"data-for\": \"delete\",\n          onClick: this.deleteNote.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"\\u274C\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button\",\n          \"data-tip\": \"Expand Note\",\n          \"data-for\": \"expand\",\n          onClick: this.expandNote.bind(this, index, this.state.expandIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"\\u2197\\uFE0F\")), React.createElement(\"textarea\", {\n          onChange: this.notesChange.bind(this, index),\n          className: \"form-control text-area\",\n          rows: \"10\",\n          value: notes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }), React.createElement(ReactTooltip, {\n          id: \"delete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }), React.createElement(ReactTooltip, {\n          id: \"expand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderExpandNote\",\n    value: function renderExpandNote(expandIndex) {\n      if (expandIndex != -1) {\n        var notesData = this.state.noteDataFromServer[expandIndex];\n        var notes = this.state.noteDataFromServer[expandIndex].notes;\n        return React.createElement(\"div\", {\n          className: \"form-group1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field1\",\n          name: \"title\",\n          placeholder: \"Note Title\",\n          value: notesData.title,\n          onChange: this.titleChange.bind(this, this.state.expandIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button1\",\n          \"data-tip\": \"Delete Note\",\n          \"data-for\": \"delete\",\n          onClick: this.deleteNote.bind(this, this.state.expandIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"\\u274C\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button1\",\n          \"data-tip\": \"Minimize Note Note\",\n          \"data-for\": \"minimize\",\n          onClick: this.minimizeNote.bind(this, this.state.expandIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, \"\\u2199\\uFE0F\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button1\",\n          \"data-tip\": \"Version History\",\n          \"data-for\": \"history\",\n          onClick: this.showVersions.bind(this, this.state.expandIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"\\uD83D\\uDD52\")), React.createElement(\"div\", {\n          className: \"notebox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          onChange: this.notesChange.bind(this, expandIndex),\n          className: \"form-control text-area note\",\n          rows: \"15\",\n          value: notes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }), React.createElement(\"textarea\", {\n          className: \"form-control text-area version\",\n          rows: \"15\",\n          value: notes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        })), React.createElement(ReactTooltip, {\n          id: \"delete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }), React.createElement(ReactTooltip, {\n          id: \"minimize\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }), React.createElement(ReactTooltip, {\n          id: \"history\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \"loading....\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"App-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"d-flex p-3 bg-secondary text-white m-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-sm\",\n          onClick: this.addNewNote.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"Add New Note\")), this.renderExpandNote(this.state.expandIndex), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, this.state.noteDataFromServer.map(this.renderNotes.bind(this)))));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/naresh/Documents/Projects/notes-application/src/App.js"],"names":["React","Component","Note","ReactTooltip","findDOMNode","App","props","state","loading","noteDataFromServer","expandIndex","fetchNotes","onSuccess","data","setState","bind","onError","hide","refs","expand","index","event","notes","target","value","updateNote","id","title","previousIndex","updateTitle","alert","addNewNote","sample","concat","previousExpandIndex","deleteNote","splice","console","log","notesData","titleChange","expandNote","notesChange","minimizeNote","showVersions","renderExpandNote","map","renderNotes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Note } from './Model';\nimport ReactTooltip from 'react-tooltip'\nimport {findDOMNode} from 'react-dom'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      noteDataFromServer: [],\n      expandIndex: -1\n    };\n  }\n\n  //Data fetch from server\n  componentWillMount() {\n    Note.fetchNotes({\n      onSuccess: function(data) {\n        this.setState({\n          noteDataFromServer: data.data,\n          loading: false\n        })\n      }.bind(this),\n      onError: function(data) {\n\n      }\n    })\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate(){\n    ReactTooltip.hide(findDOMNode(this.refs.expand))\n  }\n\n  notesChange(index, event) {\n    this.state.noteDataFromServer[index].notes = event.target.value;\n    this.setState({\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n    Note.updateNote({\n      data:{\n        id:this.state.noteDataFromServer[index].id,\n        title:this.state.noteDataFromServer[index].notes\n      },\n      onSuccess: function(data) {\n        // this.setState({\n        //   noteDataFromServer: data.data,\n        //   loading: false\n        // })\n      }.bind(this),\n      onError: function(data) {\n\n      }\n    })\n  }\n\n  titleChange(index, event) {\n    let previousIndex = this.state.noteDataFromServer[index].id;\n    this.state.noteDataFromServer[index].title = event.target.value;\n    this.setState({\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n\n    if(previousIndex){\n      Note.updateTitle({\n        data:{\n          id:this.state.noteDataFromServer[index].id,\n          title:this.state.noteDataFromServer[index].title\n        },\n        onSuccess: function(data) {\n          alert('title saved')\n          // this.setState({\n          //   noteDataFromServer: data.data,\n          //   loading: false\n          // })\n        }.bind(this),\n        onError: function(data) {\n\n        }\n      })\n    }\n    else{\n      Note.addNewNote({\n        data:{\n          title:this.state.noteDataFromServer[index].title\n        },\n        onSuccess: function(data) {\n          this.setState({\n            noteDataFromServer: data.data,\n            loading: false\n          })\n        }.bind(this),\n        onError: function(data) {\n\n        }\n      })\n    }\n  }\n\n  addNewNote(){\n    var sample =  [{title: \"\", notes: \"\", expand: false }];\n    this.setState({\n      noteDataFromServer: sample.concat(this.state.noteDataFromServer)\n    })\n  }\n\n  expandNote(index, previousExpandIndex) {\n    this.state.noteDataFromServer[index].expand = true;\n    if(previousExpandIndex != -1) {\n      this.state.noteDataFromServer[previousExpandIndex].expand = false;  \n    }\n    \n    this.setState({\n      expandIndex: index,\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n  }\n\n  minimizeNote(index) {\n    this.state.noteDataFromServer[index].expand = false;\n\n    this.setState({\n      expandIndex: -1,\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n  }\n\n  deleteNote(index) {\n    let previousIndex = this.state.noteDataFromServer[index].id;\n    if(previousIndex){\n      Note.deleteNote({\n        data:{\n          id:this.state.noteDataFromServer[index].id\n        },\n        onSuccess: function(data) {\n          this.state.noteDataFromServer.splice(index,1);\n          this.setState({\n            noteDataFromServer: this.state.noteDataFromServer,\n            loading: false\n          })\n\n        }.bind(this),\n        onError: function(data) {\n\n        }\n      })\n    }\n    else{\n      this.state.noteDataFromServer.splice(index,1);\n      this.setState({\n        noteDataFromServer: this.state.noteDataFromServer,\n        loading: false\n      })\n    }\n  }\n\n  showVersions(){\n\n  }\n\n  saveNote(index){\n    console.log(this.state.noteDataFromServer[index])\n  }\n\n  renderNotes(data, index) {\n    if(!data.expand) {\n      var notesData = this.state.noteDataFromServer[index];\n      var notes = this.state.noteDataFromServer[index].notes;\n      return(\n        <div className=\"form-group\">\n          <div className= \"input-container\">\n            <input type=\"text\" className=\"input-field\" name=\"title\" placeholder=\"Note Title\" value={notesData.title} onChange={this.titleChange.bind(this, index)}/>\n            <button type=\"button\" className=\"btn btn-sm input-button\" ref = \"expand\" data-tip='Delete Note' data-for='delete' onClick={this.deleteNote.bind(this, index)}>❌</button>\n            <button type=\"button\" className=\"btn btn-sm input-button\" data-tip='Expand Note' data-for='expand' onClick={this.expandNote.bind(this, index, this.state.expandIndex)}>↗️</button>\n          </div>\n          <textarea onChange={this.notesChange.bind(this, index)} className=\"form-control text-area\" rows=\"10\" value={notes}/>\n          <ReactTooltip id='delete'>{}</ReactTooltip>\n          <ReactTooltip id='expand'>{}</ReactTooltip>\n        </div>\n      )\n    }\n  }\n\n  renderExpandNote(expandIndex) {\n    if(expandIndex != -1) {\n      var notesData = this.state.noteDataFromServer[expandIndex];\n      var notes = this.state.noteDataFromServer[expandIndex].notes;\n      return(\n        <div className=\"form-group1\">\n          <div className= \"input-container\">\n            <input type=\"text\" className=\"input-field1\" name=\"title\" placeholder=\"Note Title\" value={notesData.title} onChange={this.titleChange.bind(this, this.state.expandIndex)}/>\n            <button type=\"button\" className=\"btn btn-sm input-button1\" data-tip='Delete Note' data-for='delete' onClick={this.deleteNote.bind(this, this.state.expandIndex)}>❌</button>\n            <button type=\"button\" className=\"btn btn-sm input-button1\" data-tip='Minimize Note Note' data-for='minimize' onClick={this.minimizeNote.bind(this, this.state.expandIndex)}>↙️</button>\n            <button type=\"button\" className=\"btn btn-sm input-button1\" data-tip='Version History' data-for='history' onClick={this.showVersions.bind(this, this.state.expandIndex)}>🕒</button>\n          </div>\n          <div className=\"notebox\">\n            <textarea onChange={this.notesChange.bind(this, expandIndex)} className=\"form-control text-area note\" rows=\"15\"value={notes}/>\n            <textarea className=\"form-control text-area version\" rows=\"15\" value={notes}/>\n          </div>\n          <ReactTooltip id='delete'>{}</ReactTooltip>\n          <ReactTooltip id='minimize'>{}</ReactTooltip>\n          <ReactTooltip id='history'>{}</ReactTooltip>\n        </div>\n      ) \n    }\n  }\n\n  render() {\n    if(this.state.loading) {\n      return (\n        <div className=\"App\">\n          <p>loading....</p>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"d-flex p-3 bg-secondary text-white m-2\">  \n              <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.addNewNote.bind(this)}>Add New Note</button>\n            </div>\n            {this.renderExpandNote(this.state.expandIndex)}\n            <div className=\"row\">\n              {this.state.noteDataFromServer.map(this.renderNotes.bind(this))}\n            </div> \n          </header>\n        </div>\n      );  \n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}