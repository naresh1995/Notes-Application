{"ast":null,"code":"import _classCallCheck from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/naresh/Documents/Projects/notes-application/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Note } from './Model'; // const dummyData = [\n//   { id:1, title: \"Naresh kumar\", notes: \"i am not good boy\", expand: false },\n//   { id:2, title: \"Naveen pg\", notes: \"i am worst\", expand: false },\n//   { id:3, title: \"Diksonsamuel \", notes: \"i am rich\", expand: false },\n//   { id:4, title: \"Naresh\", notes: \"i am poor\", expand: false },\n//   { id:5, title: \"Naveen\", notes: \"i am  good boy\", expand: false },\n//   { id:6, title: \"Dikson\", notes: \"i am god\", expand: false },\n// ]\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      loading: true,\n      noteDataFromServer: [],\n      expandIndex: -1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      Note.fetchNotes({\n        onSuccess: function (data) {\n          this.setState({\n            noteDataFromServer: data.data,\n            loading: false\n          });\n        }.bind(this),\n        onError: function onError(data) {}\n      }); //Data fetch from server\n      // {\n      //   this.setState({\n      //     loading: false,\n      //     noteDataFromServer: dataFromServer\n      //   })\n      // }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} // setTextToState(text, index) {\n    //   dummyData[index] = text;\n    // }\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(index, event) {\n      this.state.noteDataFromServer[index].notes = event.target.value;\n      this.setState({\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n    }\n  }, {\n    key: \"titleChange\",\n    value: function titleChange(index, event) {\n      this.state.noteDataFromServer[index].title = event.target.value;\n      this.setState({\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n    }\n  }, {\n    key: \"addNewNote\",\n    value: function addNewNote() {\n      var sample = [{\n        id: this.state.noteDataFromServer.length + 1,\n        title: \"\",\n        notes: \"\",\n        expand: false\n      }];\n      this.setState({\n        noteDataFromServer: sample.concat(this.state.noteDataFromServer)\n      });\n    }\n  }, {\n    key: \"expandNote\",\n    value: function expandNote(index, previousExpandIndex) {\n      this.state.noteDataFromServer[index].expand = true;\n\n      if (previousExpandIndex != -1) {\n        this.state.noteDataFromServer[previousExpandIndex].expand = false;\n      }\n\n      this.setState({\n        expandIndex: index,\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote() {}\n  }, {\n    key: \"saveNote\",\n    value: function saveNote(index) {\n      console.log(this.state.noteDataFromServer[index]);\n    }\n  }, {\n    key: \"renderNotes\",\n    value: function renderNotes(data, index) {\n      if (!data.expand) {\n        return React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          name: \"title\",\n          placeholder: \"Note Title\",\n          value: this.state.noteDataFromServer[index].title,\n          onChange: this.titleChange.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button\",\n          onClick: this.deleteNote.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"\\u274C\"), \"// \", React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button\",\n          onClick: this.saveNote.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Save\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button\",\n          onClick: this.expandNote.bind(this, index, this.state.expandIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"\\u2197\")), React.createElement(\"textarea\", {\n          onChange: this.handleChange.bind(this, index),\n          className: \"form-control text-area\",\n          rows: \"10\",\n          value: this.state.noteDataFromServer[index].notes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderExpandNote\",\n    value: function renderExpandNote(expandIndex) {\n      if (expandIndex != -1) {\n        var notesData = this.state.noteDataFromServer[expandIndex];\n        var notes = this.state.noteDataFromServer[expandIndex].notes;\n        return React.createElement(\"div\", {\n          className: \"form-group1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field1\",\n          name: \"title\",\n          placeholder: \"Note Title\",\n          value: notesData.title,\n          onChange: this.handleChange.bind(this, this.state.expandId - 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm input-button1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"\\u274C\")), React.createElement(\"textarea\", {\n          onChange: this.handleChange.bind(this, expandIndex),\n          className: \"form-control text-area\",\n          rows: \"15\",\n          value: notes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"loading....\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"App-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"d-flex p-3 bg-secondary text-white m-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-sm\",\n          onClick: this.addNewNote.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Add New Note\")), this.renderExpandNote(this.state.expandIndex), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, this.state.noteDataFromServer.map(this.renderNotes.bind(this)))));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/naresh/Documents/Projects/notes-application/src/App.js"],"names":["React","Component","Note","App","props","state","loading","noteDataFromServer","expandIndex","fetchNotes","onSuccess","data","setState","bind","onError","index","event","notes","target","value","title","sample","id","length","expand","concat","previousExpandIndex","console","log","titleChange","deleteNote","saveNote","expandNote","handleChange","notesData","expandId","addNewNote","renderExpandNote","map","renderNotes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Note } from './Model';\n\n// const dummyData = [\n//   { id:1, title: \"Naresh kumar\", notes: \"i am not good boy\", expand: false },\n//   { id:2, title: \"Naveen pg\", notes: \"i am worst\", expand: false },\n//   { id:3, title: \"Diksonsamuel \", notes: \"i am rich\", expand: false },\n//   { id:4, title: \"Naresh\", notes: \"i am poor\", expand: false },\n//   { id:5, title: \"Naveen\", notes: \"i am  good boy\", expand: false },\n//   { id:6, title: \"Dikson\", notes: \"i am god\", expand: false },\n// ]\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      noteDataFromServer: [],\n      expandIndex: -1\n    };\n  }\n\n  componentWillMount() {\n    Note.fetchNotes({\n      onSuccess: function(data) {\n        this.setState({\n          noteDataFromServer: data.data,\n          loading: false\n        })\n      }.bind(this),\n      onError: function(data) {\n\n      }\n    })\n    //Data fetch from server\n\n    // {\n    //   this.setState({\n    //     loading: false,\n    //     noteDataFromServer: dataFromServer\n    //   })\n    // }\n\n  }\n\n  componentDidMount() {\n\n  }\n\n  // setTextToState(text, index) {\n  //   dummyData[index] = text;\n  // }\n\n  handleChange(index, event) {\n    this.state.noteDataFromServer[index].notes = event.target.value;\n    this.setState({\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n  }\n\n  titleChange(index, event) {\n    this.state.noteDataFromServer[index].title = event.target.value;\n    this.setState({\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n  }\n\n  addNewNote(){\n    var sample =  [{ id:this.state.noteDataFromServer.length+1, title: \"\", notes: \"\", expand: false }];\n    this.setState({\n      noteDataFromServer: sample.concat(this.state.noteDataFromServer)\n    })\n  }\n\n  expandNote(index, previousExpandIndex) {\n    this.state.noteDataFromServer[index].expand = true;\n    if(previousExpandIndex != -1) {\n      this.state.noteDataFromServer[previousExpandIndex].expand = false;  \n    }\n    \n    this.setState({\n      expandIndex: index,\n      noteDataFromServer: this.state.noteDataFromServer\n    })\n\n  }\n\n  deleteNote() {\n\n  }\n\n  saveNote(index){\n\n    console.log(this.state.noteDataFromServer[index])\n  }\n\n  renderNotes(data, index) {\n    if(!data.expand) {\n      return(\n        <div className=\"form-group\">\n          <div className= \"input-container\">\n            <input type=\"text\" className=\"input-field\" name=\"title\" placeholder=\"Note Title\" value={this.state.noteDataFromServer[index].title} onChange={this.titleChange.bind(this, index)}/>\n            <button type=\"button\" className=\"btn btn-sm input-button\" onClick={this.deleteNote.bind(this)}>❌</button>\n            // <button type=\"button\" className=\"btn btn-sm input-button\" onClick={this.saveNote.bind(this, index)}>Save</button>\n            <button type=\"button\" className=\"btn btn-sm input-button\" onClick={this.expandNote.bind(this, index, this.state.expandIndex)}>↗</button>\n          </div>\n          <textarea onChange={this.handleChange.bind(this, index)} className=\"form-control text-area\" rows=\"10\" value={this.state.noteDataFromServer[index].notes}/>\n        </div>\n      )\n    }\n  }\n\n  renderExpandNote(expandIndex) {\n    if(expandIndex != -1) {\n      var notesData = this.state.noteDataFromServer[expandIndex];\n      var notes = this.state.noteDataFromServer[expandIndex].notes;\n      return(\n        <div className=\"form-group1\">\n          <div className= \"input-container\">\n            <input type=\"text\" className=\"input-field1\" name=\"title\" placeholder=\"Note Title\" value={notesData.title} onChange={this.handleChange.bind(this, this.state.expandId -1)}/>\n            <button type=\"button\" className=\"btn btn-sm input-button1\">❌</button>\n          </div>\n          <textarea onChange={this.handleChange.bind(this, expandIndex)} className=\"form-control text-area\" rows=\"15\" value={notes}/>\n        </div>\n      ) \n    }\n  }\n\n  render() {\n    if(this.state.loading) {\n      return (\n        <div className=\"App\">\n          <p>loading....</p>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"d-flex p-3 bg-secondary text-white m-2\">  \n              <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.addNewNote.bind(this)}>Add New Note</button>\n            </div>\n            {this.renderExpandNote(this.state.expandIndex)}\n            <div className=\"row\">\n              {this.state.noteDataFromServer.map(this.renderNotes.bind(this))}\n            </div> \n          </header>\n        </div>\n      );  \n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}