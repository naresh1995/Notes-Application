{"ast":null,"code":"import _classCallCheck from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/naresh/Documents/Projects/notes-application/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/naresh/Documents/Projects/notes-application/src/Components/NoteBlock.js\";\nimport React, { Component, PropTypes } from 'react';\n\nvar NoteBlock =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteBlock, _Component);\n\n  function NoteBlock(props) {\n    var _this;\n\n    _classCallCheck(this, NoteBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteBlock).call(this, props));\n    _this.state = {\n      note: _this.props.note\n    };\n    return _this;\n  }\n\n  _createClass(NoteBlock, [{\n    key: \"titleChange\",\n    value: function titleChange(index, event) {\n      clearTimeout(this.titleTimer);\n      var prevIndex = this.state.noteDataFromServer[index].id;\n      this.state.noteDataFromServer[index].title = event.target.value;\n      this.setState({\n        noteDataFromServer: this.state.noteDataFromServer\n      });\n      this.titleTimer = setTimeout(this.triggerTitleChange.bind(this, index), WAIT_INTERVAL);\n    }\n  }, {\n    key: \"triggerTitleChange\",\n    value: function triggerTitleChange(index) {\n      Note.updateTitle({\n        data: {\n          id: this.state.noteDataFromServer[index].id,\n          title: this.state.noteDataFromServer[index].title\n        },\n        onSuccess: function (data) {\n          NotificationManager.success(data.message);\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(index) {\n      Note.deleteNote({\n        data: {\n          id: this.state.noteDataFromServer[index].id\n        },\n        onSuccess: function (data) {\n          this.state.noteDataFromServer.splice(index, 1);\n          this.setState({\n            noteDataFromServer: this.state.noteDataFromServer,\n            loading: false\n          });\n          NotificationManager.warning(data.message);\n        }.bind(this),\n        onError: function onError(data) {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var note = this.state.note.note;\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        name: \"title\",\n        placeholder: \"Note Title\",\n        value: note.title,\n        onChange: this.titleChange.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm input-button\",\n        ref: \"expand\",\n        \"data-tip\": \"Delete Note\",\n        \"data-for\": \"delete\",\n        onClick: this.deleteNote.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u274C\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm input-button\",\n        \"data-tip\": \"Expand Note\",\n        \"data-for\": \"expand\",\n        onClick: this.expandNote.bind(this, index, this.state.expandIndex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"\\u2197\\uFE0F\")), React.createElement(\"textarea\", {\n        onChange: this.noteChange.bind(this, index),\n        className: \"form-control text-area\",\n        rows: \"10\",\n        value: note.notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(ReactTooltip, {\n        id: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(ReactTooltip, {\n        id: \"expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NoteBlock;\n}(Component);\n\nexport default NoteBlock;","map":{"version":3,"sources":["/Users/naresh/Documents/Projects/notes-application/src/Components/NoteBlock.js"],"names":["React","Component","PropTypes","NoteBlock","props","state","note","index","event","clearTimeout","titleTimer","prevIndex","noteDataFromServer","id","title","target","value","setState","setTimeout","triggerTitleChange","bind","WAIT_INTERVAL","Note","updateTitle","data","onSuccess","NotificationManager","success","message","onError","deleteNote","splice","loading","warning","titleChange","expandNote","expandIndex","noteChange","notes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE;AADL,KAAb;AAFe;AAKlB;;;;gCAEWC,K,EAAOC,K,EAAO;AACzBC,MAAAA,YAAY,CAAC,KAAKC,UAAN,CAAZ;AACA,UAAIC,SAAS,GAAG,KAAKN,KAAL,CAAWO,kBAAX,CAA8BL,KAA9B,EAAqCM,EAArD;AACA,WAAKR,KAAL,CAAWO,kBAAX,CAA8BL,KAA9B,EAAqCO,KAArC,GAA6CN,KAAK,CAACO,MAAN,CAAaC,KAA1D;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA,kBAAkB,EAAE,KAAKP,KAAL,CAAWO;AADnB,OAAd;AAGA,WAAKF,UAAL,GAAkBQ,UAAU,CAAC,KAAKC,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,EAAkCb,KAAlC,CAAD,EAA2Cc,aAA3C,CAA5B;AACH;;;uCAEkBd,K,EAAO;AACzBe,MAAAA,IAAI,CAACC,WAAL,CAAiB;AACfC,QAAAA,IAAI,EAAC;AACHX,UAAAA,EAAE,EAAC,KAAKR,KAAL,CAAWO,kBAAX,CAA8BL,KAA9B,EAAqCM,EADrC;AAEHC,UAAAA,KAAK,EAAC,KAAKT,KAAL,CAAWO,kBAAX,CAA8BL,KAA9B,EAAqCO;AAFxC,SADU;AAKfW,QAAAA,SAAS,EAAE,UAASD,IAAT,EAAe;AACxBE,UAAAA,mBAAmB,CAACC,OAApB,CAA4BH,IAAI,CAACI,OAAjC;AACD,SAFU,CAETR,IAFS,CAEJ,IAFI,CALI;AAQfS,QAAAA,OAAO,EAAE,iBAASL,IAAT,EAAe,CAEvB;AAVc,OAAjB;AAYA;;;+BAEUjB,K,EAAO;AACbe,MAAAA,IAAI,CAACQ,UAAL,CAAgB;AACdN,QAAAA,IAAI,EAAC;AACHX,UAAAA,EAAE,EAAC,KAAKR,KAAL,CAAWO,kBAAX,CAA8BL,KAA9B,EAAqCM;AADrC,SADS;AAIdY,QAAAA,SAAS,EAAE,UAASD,IAAT,EAAe;AACxB,eAAKnB,KAAL,CAAWO,kBAAX,CAA8BmB,MAA9B,CAAqCxB,KAArC,EAA2C,CAA3C;AACA,eAAKU,QAAL,CAAc;AACZL,YAAAA,kBAAkB,EAAE,KAAKP,KAAL,CAAWO,kBADnB;AAEZoB,YAAAA,OAAO,EAAE;AAFG,WAAd;AAIAN,UAAAA,mBAAmB,CAACO,OAApB,CAA4BT,IAAI,CAACI,OAAjC;AACD,SAPU,CAOTR,IAPS,CAOJ,IAPI,CAJG;AAYdS,QAAAA,OAAO,EAAE,iBAASL,IAAT,EAAe,CAEvB;AAda,OAAhB;AAgBH;;;6BAGU;AAAA,UACLlB,IADK,GACI,KAAKD,KAAL,CAAWC,IADf,CACLA,IADK;AAGL,aACC;AAAK,QAAA,GAAG,EAAEC,KAAV;AAAiB,QAAA,SAAS,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,IAAI,EAAC,OAAhD;AAAwD,QAAA,WAAW,EAAC,YAApE;AAAiF,QAAA,KAAK,EAAED,IAAI,CAACQ,KAA7F;AAAoG,QAAA,QAAQ,EAAE,KAAKoB,WAAL,CAAiBd,IAAjB,CAAsB,IAAtB,EAA4Bb,KAA5B,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAA0D,QAAA,GAAG,EAAG,QAAhE;AAAyE,oBAAS,aAAlF;AAAgG,oBAAS,QAAzG;AAAkH,QAAA,OAAO,EAAE,KAAKuB,UAAL,CAAgBV,IAAhB,CAAqB,IAArB,EAA2Bb,KAA3B,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAA0D,oBAAS,aAAnE;AAAiF,oBAAS,QAA1F;AAAmG,QAAA,OAAO,EAAE,KAAK4B,UAAL,CAAgBf,IAAhB,CAAqB,IAArB,EAA2Bb,KAA3B,EAAkC,KAAKF,KAAL,CAAW+B,WAA7C,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADF,EAME;AAAU,QAAA,QAAQ,EAAE,KAAKC,UAAL,CAAgBjB,IAAhB,CAAqB,IAArB,EAA2Bb,KAA3B,CAApB;AAAuD,QAAA,SAAS,EAAC,wBAAjE;AAA0F,QAAA,IAAI,EAAC,IAA/F;AAAoG,QAAA,KAAK,EAAED,IAAI,CAACgC,KAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADD;AAYH;;;;EApEmBrC,S;;AAuExB,eAAeE,SAAf","sourcesContent":["import React, { Component, PropTypes } from 'react';\n\nclass NoteBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \tnote: this.props.note\n        }\n    }\n\n    titleChange(index, event) {\n\t    clearTimeout(this.titleTimer)\n\t    let prevIndex = this.state.noteDataFromServer[index].id;\n\t    this.state.noteDataFromServer[index].title = event.target.value;\n\t    this.setState({\n\t      noteDataFromServer: this.state.noteDataFromServer\n\t    })\n\t    this.titleTimer = setTimeout(this.triggerTitleChange.bind(this,index), WAIT_INTERVAL)\n\t}\n\n\ttriggerTitleChange(index) {\n\t\tNote.updateTitle({\n\t\t  data:{\n\t\t    id:this.state.noteDataFromServer[index].id,\n\t\t    title:this.state.noteDataFromServer[index].title\n\t\t  },\n\t\t  onSuccess: function(data) {\n\t\t    NotificationManager.success(data.message);\n\t\t  }.bind(this),\n\t\t  onError: function(data) {\n\n\t\t  }\n\t\t})\n\t}\n\n\tdeleteNote(index) {\n      Note.deleteNote({\n        data:{\n          id:this.state.noteDataFromServer[index].id\n        },\n        onSuccess: function(data) {\n          this.state.noteDataFromServer.splice(index,1);\n          this.setState({\n            noteDataFromServer: this.state.noteDataFromServer,\n            loading: false\n          })\n          NotificationManager.warning(data.message);\n        }.bind(this),\n        onError: function(data) {\n\n        }\n      })\n  }\n\n\n    render() {\n\t\tlet { note } = this.state.note;\n\n        return(\n\t        <div key={index} className=\"form-group\">\n\t          <div className= \"input-container\">\n\t            <input type=\"text\" className=\"input-field\" name=\"title\" placeholder=\"Note Title\" value={note.title} onChange={this.titleChange.bind(this, index)}/>\n\t            <button type=\"button\" className=\"btn btn-sm input-button\" ref = \"expand\" data-tip='Delete Note' data-for='delete' onClick={this.deleteNote.bind(this, index)}>❌</button>\n\t            <button type=\"button\" className=\"btn btn-sm input-button\" data-tip='Expand Note' data-for='expand' onClick={this.expandNote.bind(this, index, this.state.expandIndex)}>↗️</button>\n\t          </div>\n\t          <textarea onChange={this.noteChange.bind(this, index)} className=\"form-control text-area\" rows=\"10\" value={note.notes}/>\n\t          <ReactTooltip id='delete'>{}</ReactTooltip>\n\t          <ReactTooltip id='expand'>{}</ReactTooltip>\n\t        </div>\n\t      )\n    }\n}\n\nexport default NoteBlock;\n"]},"metadata":{},"sourceType":"module"}